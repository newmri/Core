// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Login
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public enum ErrorCode : sbyte
{
  SUCCESS = 0,
  UNKNOWN = 1,
  ALREADY_LOGINED = 2,
};

public enum Packet : byte
{
  NONE = 0,
  CS_LOGIN_REQ = 1,
  SC_LOGIN_RES = 2,
  SC_PING_REQ = 3,
  CS_PING_RES = 4,
  CS_LOGOUT_NOTI = 5,
  CS_CREATE_CHARACTER_REQ = 6,
  SC_CREATE_CHARACTER_RES = 7,
};

public struct CS_LOGIN_REQ : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static CS_LOGIN_REQ GetRootAsCS_LOGIN_REQ(ByteBuffer _bb) { return GetRootAsCS_LOGIN_REQ(_bb, new CS_LOGIN_REQ()); }
  public static CS_LOGIN_REQ GetRootAsCS_LOGIN_REQ(ByteBuffer _bb, CS_LOGIN_REQ obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CS_LOGIN_REQ __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long Uid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public int Token { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<Login.CS_LOGIN_REQ> CreateCS_LOGIN_REQ(FlatBufferBuilder builder,
      long uid = 0,
      int token = 0) {
    builder.StartTable(2);
    CS_LOGIN_REQ.AddUid(builder, uid);
    CS_LOGIN_REQ.AddToken(builder, token);
    return CS_LOGIN_REQ.EndCS_LOGIN_REQ(builder);
  }

  public static void StartCS_LOGIN_REQ(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddUid(FlatBufferBuilder builder, long uid) { builder.AddLong(0, uid, 0); }
  public static void AddToken(FlatBufferBuilder builder, int token) { builder.AddInt(1, token, 0); }
  public static Offset<Login.CS_LOGIN_REQ> EndCS_LOGIN_REQ(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Login.CS_LOGIN_REQ>(o);
  }
};

public struct CHARACTER_INFO : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static CHARACTER_INFO GetRootAsCHARACTER_INFO(ByteBuffer _bb) { return GetRootAsCHARACTER_INFO(_bb, new CHARACTER_INFO()); }
  public static CHARACTER_INFO GetRootAsCHARACTER_INFO(ByteBuffer _bb, CHARACTER_INFO obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CHARACTER_INFO __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long Uid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public string Name { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(6); }
  public byte Level { get { int o = __p.__offset(8); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public Define.Job Job { get { int o = __p.__offset(10); return o != 0 ? (Define.Job)__p.bb.Get(o + __p.bb_pos) : Define.Job.Warrior; } }

  public static Offset<Login.CHARACTER_INFO> CreateCHARACTER_INFO(FlatBufferBuilder builder,
      long uid = 0,
      StringOffset nameOffset = default(StringOffset),
      byte level = 0,
      Define.Job job = Define.Job.Warrior) {
    builder.StartTable(4);
    CHARACTER_INFO.AddUid(builder, uid);
    CHARACTER_INFO.AddName(builder, nameOffset);
    CHARACTER_INFO.AddJob(builder, job);
    CHARACTER_INFO.AddLevel(builder, level);
    return CHARACTER_INFO.EndCHARACTER_INFO(builder);
  }

  public static void StartCHARACTER_INFO(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddUid(FlatBufferBuilder builder, long uid) { builder.AddLong(0, uid, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(1, nameOffset.Value, 0); }
  public static void AddLevel(FlatBufferBuilder builder, byte level) { builder.AddByte(2, level, 0); }
  public static void AddJob(FlatBufferBuilder builder, Define.Job job) { builder.AddByte(3, (byte)job, 0); }
  public static Offset<Login.CHARACTER_INFO> EndCHARACTER_INFO(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Login.CHARACTER_INFO>(o);
  }
};

public struct SC_LOGIN_RES : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static SC_LOGIN_RES GetRootAsSC_LOGIN_RES(ByteBuffer _bb) { return GetRootAsSC_LOGIN_RES(_bb, new SC_LOGIN_RES()); }
  public static SC_LOGIN_RES GetRootAsSC_LOGIN_RES(ByteBuffer _bb, SC_LOGIN_RES obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SC_LOGIN_RES __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Login.ErrorCode Result { get { int o = __p.__offset(4); return o != 0 ? (Login.ErrorCode)__p.bb.GetSbyte(o + __p.bb_pos) : Login.ErrorCode.SUCCESS; } }
  public byte MaxSlotCount { get { int o = __p.__offset(6); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public byte EmptySlotCount { get { int o = __p.__offset(8); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public Login.CHARACTER_INFO? CharacterInfo(int j) { int o = __p.__offset(10); return o != 0 ? (Login.CHARACTER_INFO?)(new Login.CHARACTER_INFO()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int CharacterInfoLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<Login.SC_LOGIN_RES> CreateSC_LOGIN_RES(FlatBufferBuilder builder,
      Login.ErrorCode result = Login.ErrorCode.SUCCESS,
      byte max_slot_count = 0,
      byte empty_slot_count = 0,
      VectorOffset character_infoOffset = default(VectorOffset)) {
    builder.StartTable(4);
    SC_LOGIN_RES.AddCharacterInfo(builder, character_infoOffset);
    SC_LOGIN_RES.AddEmptySlotCount(builder, empty_slot_count);
    SC_LOGIN_RES.AddMaxSlotCount(builder, max_slot_count);
    SC_LOGIN_RES.AddResult(builder, result);
    return SC_LOGIN_RES.EndSC_LOGIN_RES(builder);
  }

  public static void StartSC_LOGIN_RES(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddResult(FlatBufferBuilder builder, Login.ErrorCode result) { builder.AddSbyte(0, (sbyte)result, 0); }
  public static void AddMaxSlotCount(FlatBufferBuilder builder, byte maxSlotCount) { builder.AddByte(1, maxSlotCount, 0); }
  public static void AddEmptySlotCount(FlatBufferBuilder builder, byte emptySlotCount) { builder.AddByte(2, emptySlotCount, 0); }
  public static void AddCharacterInfo(FlatBufferBuilder builder, VectorOffset characterInfoOffset) { builder.AddOffset(3, characterInfoOffset.Value, 0); }
  public static VectorOffset CreateCharacterInfoVector(FlatBufferBuilder builder, Offset<Login.CHARACTER_INFO>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateCharacterInfoVectorBlock(FlatBufferBuilder builder, Offset<Login.CHARACTER_INFO>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartCharacterInfoVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<Login.SC_LOGIN_RES> EndSC_LOGIN_RES(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Login.SC_LOGIN_RES>(o);
  }
};

public struct SC_PING_REQ : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static SC_PING_REQ GetRootAsSC_PING_REQ(ByteBuffer _bb) { return GetRootAsSC_PING_REQ(_bb, new SC_PING_REQ()); }
  public static SC_PING_REQ GetRootAsSC_PING_REQ(ByteBuffer _bb, SC_PING_REQ obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SC_PING_REQ __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartSC_PING_REQ(FlatBufferBuilder builder) { builder.StartTable(0); }
  public static Offset<Login.SC_PING_REQ> EndSC_PING_REQ(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Login.SC_PING_REQ>(o);
  }
};

public struct CS_PING_RES : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static CS_PING_RES GetRootAsCS_PING_RES(ByteBuffer _bb) { return GetRootAsCS_PING_RES(_bb, new CS_PING_RES()); }
  public static CS_PING_RES GetRootAsCS_PING_RES(ByteBuffer _bb, CS_PING_RES obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CS_PING_RES __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartCS_PING_RES(FlatBufferBuilder builder) { builder.StartTable(0); }
  public static Offset<Login.CS_PING_RES> EndCS_PING_RES(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Login.CS_PING_RES>(o);
  }
};

public struct CS_LOGOUT_NOTI : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static CS_LOGOUT_NOTI GetRootAsCS_LOGOUT_NOTI(ByteBuffer _bb) { return GetRootAsCS_LOGOUT_NOTI(_bb, new CS_LOGOUT_NOTI()); }
  public static CS_LOGOUT_NOTI GetRootAsCS_LOGOUT_NOTI(ByteBuffer _bb, CS_LOGOUT_NOTI obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CS_LOGOUT_NOTI __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartCS_LOGOUT_NOTI(FlatBufferBuilder builder) { builder.StartTable(0); }
  public static Offset<Login.CS_LOGOUT_NOTI> EndCS_LOGOUT_NOTI(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Login.CS_LOGOUT_NOTI>(o);
  }
};

public struct CS_CREATE_CHARACTER_REQ : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static CS_CREATE_CHARACTER_REQ GetRootAsCS_CREATE_CHARACTER_REQ(ByteBuffer _bb) { return GetRootAsCS_CREATE_CHARACTER_REQ(_bb, new CS_CREATE_CHARACTER_REQ()); }
  public static CS_CREATE_CHARACTER_REQ GetRootAsCS_CREATE_CHARACTER_REQ(ByteBuffer _bb, CS_CREATE_CHARACTER_REQ obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CS_CREATE_CHARACTER_REQ __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Name { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(4); }
  public Define.Job Job { get { int o = __p.__offset(6); return o != 0 ? (Define.Job)__p.bb.Get(o + __p.bb_pos) : Define.Job.Warrior; } }

  public static Offset<Login.CS_CREATE_CHARACTER_REQ> CreateCS_CREATE_CHARACTER_REQ(FlatBufferBuilder builder,
      StringOffset nameOffset = default(StringOffset),
      Define.Job job = Define.Job.Warrior) {
    builder.StartTable(2);
    CS_CREATE_CHARACTER_REQ.AddName(builder, nameOffset);
    CS_CREATE_CHARACTER_REQ.AddJob(builder, job);
    return CS_CREATE_CHARACTER_REQ.EndCS_CREATE_CHARACTER_REQ(builder);
  }

  public static void StartCS_CREATE_CHARACTER_REQ(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(0, nameOffset.Value, 0); }
  public static void AddJob(FlatBufferBuilder builder, Define.Job job) { builder.AddByte(1, (byte)job, 0); }
  public static Offset<Login.CS_CREATE_CHARACTER_REQ> EndCS_CREATE_CHARACTER_REQ(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Login.CS_CREATE_CHARACTER_REQ>(o);
  }
};

public struct SC_CREATE_CHARACTER_RES : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static SC_CREATE_CHARACTER_RES GetRootAsSC_CREATE_CHARACTER_RES(ByteBuffer _bb) { return GetRootAsSC_CREATE_CHARACTER_RES(_bb, new SC_CREATE_CHARACTER_RES()); }
  public static SC_CREATE_CHARACTER_RES GetRootAsSC_CREATE_CHARACTER_RES(ByteBuffer _bb, SC_CREATE_CHARACTER_RES obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SC_CREATE_CHARACTER_RES __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public bool IsSuccess { get { int o = __p.__offset(4); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public Login.CHARACTER_INFO? CharacterInfo { get { int o = __p.__offset(6); return o != 0 ? (Login.CHARACTER_INFO?)(new Login.CHARACTER_INFO()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<Login.SC_CREATE_CHARACTER_RES> CreateSC_CREATE_CHARACTER_RES(FlatBufferBuilder builder,
      bool is_success = false,
      Offset<Login.CHARACTER_INFO> character_infoOffset = default(Offset<Login.CHARACTER_INFO>)) {
    builder.StartTable(2);
    SC_CREATE_CHARACTER_RES.AddCharacterInfo(builder, character_infoOffset);
    SC_CREATE_CHARACTER_RES.AddIsSuccess(builder, is_success);
    return SC_CREATE_CHARACTER_RES.EndSC_CREATE_CHARACTER_RES(builder);
  }

  public static void StartSC_CREATE_CHARACTER_RES(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddIsSuccess(FlatBufferBuilder builder, bool isSuccess) { builder.AddBool(0, isSuccess, false); }
  public static void AddCharacterInfo(FlatBufferBuilder builder, Offset<Login.CHARACTER_INFO> characterInfoOffset) { builder.AddOffset(1, characterInfoOffset.Value, 0); }
  public static Offset<Login.SC_CREATE_CHARACTER_RES> EndSC_CREATE_CHARACTER_RES(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Login.SC_CREATE_CHARACTER_RES>(o);
  }
};

public struct Root : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static Root GetRootAsRoot(ByteBuffer _bb) { return GetRootAsRoot(_bb, new Root()); }
  public static Root GetRootAsRoot(ByteBuffer _bb, Root obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Root __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Login.Packet PacketType { get { int o = __p.__offset(4); return o != 0 ? (Login.Packet)__p.bb.Get(o + __p.bb_pos) : Login.Packet.NONE; } }
  public TTable? Packet<TTable>() where TTable : struct, IFlatbufferObject { int o = __p.__offset(6); return o != 0 ? (TTable?)__p.__union<TTable>(o + __p.bb_pos) : null; }
  public Login.CS_LOGIN_REQ PacketAsCS_LOGIN_REQ() { return Packet<Login.CS_LOGIN_REQ>().Value; }
  public Login.SC_LOGIN_RES PacketAsSC_LOGIN_RES() { return Packet<Login.SC_LOGIN_RES>().Value; }
  public Login.SC_PING_REQ PacketAsSC_PING_REQ() { return Packet<Login.SC_PING_REQ>().Value; }
  public Login.CS_PING_RES PacketAsCS_PING_RES() { return Packet<Login.CS_PING_RES>().Value; }
  public Login.CS_LOGOUT_NOTI PacketAsCS_LOGOUT_NOTI() { return Packet<Login.CS_LOGOUT_NOTI>().Value; }
  public Login.CS_CREATE_CHARACTER_REQ PacketAsCS_CREATE_CHARACTER_REQ() { return Packet<Login.CS_CREATE_CHARACTER_REQ>().Value; }
  public Login.SC_CREATE_CHARACTER_RES PacketAsSC_CREATE_CHARACTER_RES() { return Packet<Login.SC_CREATE_CHARACTER_RES>().Value; }

  public static Offset<Login.Root> CreateRoot(FlatBufferBuilder builder,
      Login.Packet packet_type = Login.Packet.NONE,
      int packetOffset = 0) {
    builder.StartTable(2);
    Root.AddPacket(builder, packetOffset);
    Root.AddPacketType(builder, packet_type);
    return Root.EndRoot(builder);
  }

  public static void StartRoot(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddPacketType(FlatBufferBuilder builder, Login.Packet packetType) { builder.AddByte(0, (byte)packetType, 0); }
  public static void AddPacket(FlatBufferBuilder builder, int packetOffset) { builder.AddOffset(1, packetOffset, 0); }
  public static Offset<Login.Root> EndRoot(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Login.Root>(o);
  }
  public static void FinishRootBuffer(FlatBufferBuilder builder, Offset<Login.Root> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedRootBuffer(FlatBufferBuilder builder, Offset<Login.Root> offset) { builder.FinishSizePrefixed(offset.Value); }
};


}
