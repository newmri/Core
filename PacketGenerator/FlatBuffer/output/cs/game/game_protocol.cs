// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace GamePacket
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public enum ErrorCode : sbyte
{
  SUCCESS = 0,
  UNKNOWN = 1,
  ALREADY_LOGINED = 2,
};

public enum Packet : byte
{
  NONE = 0,
  CS_LOGIN_REQ = 1,
  SC_LOGIN_RES = 2,
  SC_PING_REQ = 3,
  CS_PING_RES = 4,
  CS_LOGOUT_NOTI = 5,
  SC_SPAWN_PLAYER_NOTI = 6,
  SC_DESPAWN_OBJECT_NOTI = 7,
  CS_MOVE_REQ = 8,
  SC_MOVE_RES = 9,
  CS_SET_STATE_REQ = 10,
  SC_SET_STATE_RES = 11,
  CS_USE_SKILL_REQ = 12,
  SC_USE_SKILL_RES = 13,
  SC_GET_DAMAGE_NOTI = 14,
  CS_REVIVE_REQ = 15,
  SC_REVIVE_RES = 16,
};

public class PacketUnion {
  public Packet Type { get; set; }
  public object Value { get; set; }

  public PacketUnion() {
    this.Type = Packet.NONE;
    this.Value = null;
  }

  public T As<T>() where T : class { return this.Value as T; }
  public GamePacket.CS_LOGIN_REQT AsCS_LOGIN_REQ() { return this.As<GamePacket.CS_LOGIN_REQT>(); }
  public GamePacket.SC_LOGIN_REST AsSC_LOGIN_RES() { return this.As<GamePacket.SC_LOGIN_REST>(); }
  public GamePacket.SC_PING_REQT AsSC_PING_REQ() { return this.As<GamePacket.SC_PING_REQT>(); }
  public GamePacket.CS_PING_REST AsCS_PING_RES() { return this.As<GamePacket.CS_PING_REST>(); }
  public GamePacket.CS_LOGOUT_NOTIT AsCS_LOGOUT_NOTI() { return this.As<GamePacket.CS_LOGOUT_NOTIT>(); }
  public GamePacket.SC_SPAWN_PLAYER_NOTIT AsSC_SPAWN_PLAYER_NOTI() { return this.As<GamePacket.SC_SPAWN_PLAYER_NOTIT>(); }
  public GamePacket.SC_DESPAWN_OBJECT_NOTIT AsSC_DESPAWN_OBJECT_NOTI() { return this.As<GamePacket.SC_DESPAWN_OBJECT_NOTIT>(); }
  public GamePacket.CS_MOVE_REQT AsCS_MOVE_REQ() { return this.As<GamePacket.CS_MOVE_REQT>(); }
  public GamePacket.SC_MOVE_REST AsSC_MOVE_RES() { return this.As<GamePacket.SC_MOVE_REST>(); }
  public GamePacket.CS_SET_STATE_REQT AsCS_SET_STATE_REQ() { return this.As<GamePacket.CS_SET_STATE_REQT>(); }
  public GamePacket.SC_SET_STATE_REST AsSC_SET_STATE_RES() { return this.As<GamePacket.SC_SET_STATE_REST>(); }
  public GamePacket.CS_USE_SKILL_REQT AsCS_USE_SKILL_REQ() { return this.As<GamePacket.CS_USE_SKILL_REQT>(); }
  public GamePacket.SC_USE_SKILL_REST AsSC_USE_SKILL_RES() { return this.As<GamePacket.SC_USE_SKILL_REST>(); }
  public GamePacket.SC_GET_DAMAGE_NOTIT AsSC_GET_DAMAGE_NOTI() { return this.As<GamePacket.SC_GET_DAMAGE_NOTIT>(); }
  public GamePacket.CS_REVIVE_REQT AsCS_REVIVE_REQ() { return this.As<GamePacket.CS_REVIVE_REQT>(); }
  public GamePacket.SC_REVIVE_REST AsSC_REVIVE_RES() { return this.As<GamePacket.SC_REVIVE_REST>(); }

  public static int Pack(FlatBuffers.FlatBufferBuilder builder, PacketUnion _o) {
    switch (_o.Type) {
      default: return 0;
      case Packet.CS_LOGIN_REQ: return GamePacket.CS_LOGIN_REQ.Pack(builder, _o.AsCS_LOGIN_REQ()).Value;
      case Packet.SC_LOGIN_RES: return GamePacket.SC_LOGIN_RES.Pack(builder, _o.AsSC_LOGIN_RES()).Value;
      case Packet.SC_PING_REQ: return GamePacket.SC_PING_REQ.Pack(builder, _o.AsSC_PING_REQ()).Value;
      case Packet.CS_PING_RES: return GamePacket.CS_PING_RES.Pack(builder, _o.AsCS_PING_RES()).Value;
      case Packet.CS_LOGOUT_NOTI: return GamePacket.CS_LOGOUT_NOTI.Pack(builder, _o.AsCS_LOGOUT_NOTI()).Value;
      case Packet.SC_SPAWN_PLAYER_NOTI: return GamePacket.SC_SPAWN_PLAYER_NOTI.Pack(builder, _o.AsSC_SPAWN_PLAYER_NOTI()).Value;
      case Packet.SC_DESPAWN_OBJECT_NOTI: return GamePacket.SC_DESPAWN_OBJECT_NOTI.Pack(builder, _o.AsSC_DESPAWN_OBJECT_NOTI()).Value;
      case Packet.CS_MOVE_REQ: return GamePacket.CS_MOVE_REQ.Pack(builder, _o.AsCS_MOVE_REQ()).Value;
      case Packet.SC_MOVE_RES: return GamePacket.SC_MOVE_RES.Pack(builder, _o.AsSC_MOVE_RES()).Value;
      case Packet.CS_SET_STATE_REQ: return GamePacket.CS_SET_STATE_REQ.Pack(builder, _o.AsCS_SET_STATE_REQ()).Value;
      case Packet.SC_SET_STATE_RES: return GamePacket.SC_SET_STATE_RES.Pack(builder, _o.AsSC_SET_STATE_RES()).Value;
      case Packet.CS_USE_SKILL_REQ: return GamePacket.CS_USE_SKILL_REQ.Pack(builder, _o.AsCS_USE_SKILL_REQ()).Value;
      case Packet.SC_USE_SKILL_RES: return GamePacket.SC_USE_SKILL_RES.Pack(builder, _o.AsSC_USE_SKILL_RES()).Value;
      case Packet.SC_GET_DAMAGE_NOTI: return GamePacket.SC_GET_DAMAGE_NOTI.Pack(builder, _o.AsSC_GET_DAMAGE_NOTI()).Value;
      case Packet.CS_REVIVE_REQ: return GamePacket.CS_REVIVE_REQ.Pack(builder, _o.AsCS_REVIVE_REQ()).Value;
      case Packet.SC_REVIVE_RES: return GamePacket.SC_REVIVE_RES.Pack(builder, _o.AsSC_REVIVE_RES()).Value;
    }
  }
}

public enum CharacterInfoBase : byte
{
  NONE = 0,
  CharacterInfo = 1,
  MyCharacterInfo = 2,
};

public class CharacterInfoBaseUnion {
  public CharacterInfoBase Type { get; set; }
  public object Value { get; set; }

  public CharacterInfoBaseUnion() {
    this.Type = CharacterInfoBase.NONE;
    this.Value = null;
  }

  public T As<T>() where T : class { return this.Value as T; }
  public GamePacket.CharacterInfoT AsCharacterInfo() { return this.As<GamePacket.CharacterInfoT>(); }
  public GamePacket.MyCharacterInfoT AsMyCharacterInfo() { return this.As<GamePacket.MyCharacterInfoT>(); }

  public static int Pack(FlatBuffers.FlatBufferBuilder builder, CharacterInfoBaseUnion _o) {
    switch (_o.Type) {
      default: return 0;
      case CharacterInfoBase.CharacterInfo: return GamePacket.CharacterInfo.Pack(builder, _o.AsCharacterInfo()).Value;
      case CharacterInfoBase.MyCharacterInfo: return GamePacket.MyCharacterInfo.Pack(builder, _o.AsMyCharacterInfo()).Value;
    }
  }
}

public struct CS_LOGIN_REQ : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static CS_LOGIN_REQ GetRootAsCS_LOGIN_REQ(ByteBuffer _bb) { return GetRootAsCS_LOGIN_REQ(_bb, new CS_LOGIN_REQ()); }
  public static CS_LOGIN_REQ GetRootAsCS_LOGIN_REQ(ByteBuffer _bb, CS_LOGIN_REQ obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CS_LOGIN_REQ __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long Uid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long CharacterUid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public int Token { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<GamePacket.CS_LOGIN_REQ> CreateCS_LOGIN_REQ(FlatBufferBuilder builder,
      long uid = 0,
      long character_uid = 0,
      int token = 0) {
    builder.StartTable(3);
    CS_LOGIN_REQ.AddCharacterUid(builder, character_uid);
    CS_LOGIN_REQ.AddUid(builder, uid);
    CS_LOGIN_REQ.AddToken(builder, token);
    return CS_LOGIN_REQ.EndCS_LOGIN_REQ(builder);
  }

  public static void StartCS_LOGIN_REQ(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddUid(FlatBufferBuilder builder, long uid) { builder.AddLong(0, uid, 0); }
  public static void AddCharacterUid(FlatBufferBuilder builder, long characterUid) { builder.AddLong(1, characterUid, 0); }
  public static void AddToken(FlatBufferBuilder builder, int token) { builder.AddInt(2, token, 0); }
  public static Offset<GamePacket.CS_LOGIN_REQ> EndCS_LOGIN_REQ(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<GamePacket.CS_LOGIN_REQ>(o);
  }
  public CS_LOGIN_REQT UnPack() {
    var _o = new CS_LOGIN_REQT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(CS_LOGIN_REQT _o) {
    _o.Uid = this.Uid;
    _o.CharacterUid = this.CharacterUid;
    _o.Token = this.Token;
  }
  public static Offset<GamePacket.CS_LOGIN_REQ> Pack(FlatBufferBuilder builder, CS_LOGIN_REQT _o) {
    if (_o == null) return default(Offset<GamePacket.CS_LOGIN_REQ>);
    return CreateCS_LOGIN_REQ(
      builder,
      _o.Uid,
      _o.CharacterUid,
      _o.Token);
  }
};

public class CS_LOGIN_REQT
{
  public long Uid { get; set; }
  public long CharacterUid { get; set; }
  public int Token { get; set; }

  public CS_LOGIN_REQT() {
    this.Uid = 0;
    this.CharacterUid = 0;
    this.Token = 0;
  }
}

public struct CharacterInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static CharacterInfo GetRootAsCharacterInfo(ByteBuffer _bb) { return GetRootAsCharacterInfo(_bb, new CharacterInfo()); }
  public static CharacterInfo GetRootAsCharacterInfo(ByteBuffer _bb, CharacterInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CharacterInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Name { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(4); }
  public Define.Job Job { get { int o = __p.__offset(6); return o != 0 ? (Define.Job)__p.bb.Get(o + __p.bb_pos) : Define.Job.WARRIOR; } }
  public Info.CharacterGear? Gear { get { int o = __p.__offset(8); return o != 0 ? (Info.CharacterGear?)(new Info.CharacterGear()).__assign(o + __p.bb_pos, __p.bb) : null; } }

  public static Offset<GamePacket.CharacterInfo> CreateCharacterInfo(FlatBufferBuilder builder,
      StringOffset nameOffset = default(StringOffset),
      Define.Job job = Define.Job.WARRIOR,
      Info.CharacterGearT gear = null) {
    builder.StartTable(3);
    CharacterInfo.AddGear(builder, Info.CharacterGear.Pack(builder, gear));
    CharacterInfo.AddName(builder, nameOffset);
    CharacterInfo.AddJob(builder, job);
    return CharacterInfo.EndCharacterInfo(builder);
  }

  public static void StartCharacterInfo(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(0, nameOffset.Value, 0); }
  public static void AddJob(FlatBufferBuilder builder, Define.Job job) { builder.AddByte(1, (byte)job, 0); }
  public static void AddGear(FlatBufferBuilder builder, Offset<Info.CharacterGear> gearOffset) { builder.AddStruct(2, gearOffset.Value, 0); }
  public static Offset<GamePacket.CharacterInfo> EndCharacterInfo(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<GamePacket.CharacterInfo>(o);
  }
  public CharacterInfoT UnPack() {
    var _o = new CharacterInfoT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(CharacterInfoT _o) {
    _o.Name = this.Name;
    _o.Job = this.Job;
    _o.Gear = this.Gear.HasValue ? this.Gear.Value.UnPack() : null;
  }
  public static Offset<GamePacket.CharacterInfo> Pack(FlatBufferBuilder builder, CharacterInfoT _o) {
    if (_o == null) return default(Offset<GamePacket.CharacterInfo>);
    var _name = _o.Name == null ? default(StringOffset) : builder.CreateString(_o.Name);
    return CreateCharacterInfo(
      builder,
      _name,
      _o.Job,
      _o.Gear);
  }
};

public class CharacterInfoT
{
  public string Name { get; set; }
  public Define.Job Job { get; set; }
  public Info.CharacterGearT Gear { get; set; }

  public CharacterInfoT() {
    this.Name = null;
    this.Job = Define.Job.WARRIOR;
    this.Gear = new Info.CharacterGearT();
  }
}

public struct MyCharacterInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static MyCharacterInfo GetRootAsMyCharacterInfo(ByteBuffer _bb) { return GetRootAsMyCharacterInfo(_bb, new MyCharacterInfo()); }
  public static MyCharacterInfo GetRootAsMyCharacterInfo(ByteBuffer _bb, MyCharacterInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public MyCharacterInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Name { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(4); }
  public Define.Job Job { get { int o = __p.__offset(6); return o != 0 ? (Define.Job)__p.bb.Get(o + __p.bb_pos) : Define.Job.WARRIOR; } }
  public Info.CharacterGear? Gear { get { int o = __p.__offset(8); return o != 0 ? (Info.CharacterGear?)(new Info.CharacterGear()).__assign(o + __p.bb_pos, __p.bb) : null; } }
  public int BonusStat { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<GamePacket.MyCharacterInfo> CreateMyCharacterInfo(FlatBufferBuilder builder,
      StringOffset nameOffset = default(StringOffset),
      Define.Job job = Define.Job.WARRIOR,
      Info.CharacterGearT gear = null,
      int bonus_stat = 0) {
    builder.StartTable(4);
    MyCharacterInfo.AddBonusStat(builder, bonus_stat);
    MyCharacterInfo.AddGear(builder, Info.CharacterGear.Pack(builder, gear));
    MyCharacterInfo.AddName(builder, nameOffset);
    MyCharacterInfo.AddJob(builder, job);
    return MyCharacterInfo.EndMyCharacterInfo(builder);
  }

  public static void StartMyCharacterInfo(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(0, nameOffset.Value, 0); }
  public static void AddJob(FlatBufferBuilder builder, Define.Job job) { builder.AddByte(1, (byte)job, 0); }
  public static void AddGear(FlatBufferBuilder builder, Offset<Info.CharacterGear> gearOffset) { builder.AddStruct(2, gearOffset.Value, 0); }
  public static void AddBonusStat(FlatBufferBuilder builder, int bonusStat) { builder.AddInt(3, bonusStat, 0); }
  public static Offset<GamePacket.MyCharacterInfo> EndMyCharacterInfo(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<GamePacket.MyCharacterInfo>(o);
  }
  public MyCharacterInfoT UnPack() {
    var _o = new MyCharacterInfoT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(MyCharacterInfoT _o) {
    _o.Name = this.Name;
    _o.Job = this.Job;
    _o.Gear = this.Gear.HasValue ? this.Gear.Value.UnPack() : null;
    _o.BonusStat = this.BonusStat;
  }
  public static Offset<GamePacket.MyCharacterInfo> Pack(FlatBufferBuilder builder, MyCharacterInfoT _o) {
    if (_o == null) return default(Offset<GamePacket.MyCharacterInfo>);
    var _name = _o.Name == null ? default(StringOffset) : builder.CreateString(_o.Name);
    return CreateMyCharacterInfo(
      builder,
      _name,
      _o.Job,
      _o.Gear,
      _o.BonusStat);
  }
};

public class MyCharacterInfoT
{
  public string Name { get; set; }
  public Define.Job Job { get; set; }
  public Info.CharacterGearT Gear { get; set; }
  public int BonusStat { get; set; }

  public MyCharacterInfoT() {
    this.Name = null;
    this.Job = Define.Job.WARRIOR;
    this.Gear = new Info.CharacterGearT();
    this.BonusStat = 0;
  }
}

public struct SC_LOGIN_RES : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static SC_LOGIN_RES GetRootAsSC_LOGIN_RES(ByteBuffer _bb) { return GetRootAsSC_LOGIN_RES(_bb, new SC_LOGIN_RES()); }
  public static SC_LOGIN_RES GetRootAsSC_LOGIN_RES(ByteBuffer _bb, SC_LOGIN_RES obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SC_LOGIN_RES __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public GamePacket.ErrorCode Result { get { int o = __p.__offset(4); return o != 0 ? (GamePacket.ErrorCode)__p.bb.GetSbyte(o + __p.bb_pos) : GamePacket.ErrorCode.SUCCESS; } }
  public Info.CreatureInfo? CreatureInfo { get { int o = __p.__offset(6); return o != 0 ? (Info.CreatureInfo?)(new Info.CreatureInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public GamePacket.MyCharacterInfo? CharacterInfo { get { int o = __p.__offset(8); return o != 0 ? (GamePacket.MyCharacterInfo?)(new GamePacket.MyCharacterInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public Info.MoneyWrapper? Money { get { int o = __p.__offset(10); return o != 0 ? (Info.MoneyWrapper?)(new Info.MoneyWrapper()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<GamePacket.SC_LOGIN_RES> CreateSC_LOGIN_RES(FlatBufferBuilder builder,
      GamePacket.ErrorCode result = GamePacket.ErrorCode.SUCCESS,
      Offset<Info.CreatureInfo> creature_infoOffset = default(Offset<Info.CreatureInfo>),
      Offset<GamePacket.MyCharacterInfo> character_infoOffset = default(Offset<GamePacket.MyCharacterInfo>),
      Offset<Info.MoneyWrapper> moneyOffset = default(Offset<Info.MoneyWrapper>)) {
    builder.StartTable(4);
    SC_LOGIN_RES.AddMoney(builder, moneyOffset);
    SC_LOGIN_RES.AddCharacterInfo(builder, character_infoOffset);
    SC_LOGIN_RES.AddCreatureInfo(builder, creature_infoOffset);
    SC_LOGIN_RES.AddResult(builder, result);
    return SC_LOGIN_RES.EndSC_LOGIN_RES(builder);
  }

  public static void StartSC_LOGIN_RES(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddResult(FlatBufferBuilder builder, GamePacket.ErrorCode result) { builder.AddSbyte(0, (sbyte)result, 0); }
  public static void AddCreatureInfo(FlatBufferBuilder builder, Offset<Info.CreatureInfo> creatureInfoOffset) { builder.AddOffset(1, creatureInfoOffset.Value, 0); }
  public static void AddCharacterInfo(FlatBufferBuilder builder, Offset<GamePacket.MyCharacterInfo> characterInfoOffset) { builder.AddOffset(2, characterInfoOffset.Value, 0); }
  public static void AddMoney(FlatBufferBuilder builder, Offset<Info.MoneyWrapper> moneyOffset) { builder.AddOffset(3, moneyOffset.Value, 0); }
  public static Offset<GamePacket.SC_LOGIN_RES> EndSC_LOGIN_RES(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<GamePacket.SC_LOGIN_RES>(o);
  }
  public SC_LOGIN_REST UnPack() {
    var _o = new SC_LOGIN_REST();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SC_LOGIN_REST _o) {
    _o.Result = this.Result;
    _o.CreatureInfo = this.CreatureInfo.HasValue ? this.CreatureInfo.Value.UnPack() : null;
    _o.CharacterInfo = this.CharacterInfo.HasValue ? this.CharacterInfo.Value.UnPack() : null;
    _o.Money = this.Money.HasValue ? this.Money.Value.UnPack() : null;
  }
  public static Offset<GamePacket.SC_LOGIN_RES> Pack(FlatBufferBuilder builder, SC_LOGIN_REST _o) {
    if (_o == null) return default(Offset<GamePacket.SC_LOGIN_RES>);
    var _creature_info = _o.CreatureInfo == null ? default(Offset<Info.CreatureInfo>) : Info.CreatureInfo.Pack(builder, _o.CreatureInfo);
    var _character_info = _o.CharacterInfo == null ? default(Offset<GamePacket.MyCharacterInfo>) : GamePacket.MyCharacterInfo.Pack(builder, _o.CharacterInfo);
    var _money = _o.Money == null ? default(Offset<Info.MoneyWrapper>) : Info.MoneyWrapper.Pack(builder, _o.Money);
    return CreateSC_LOGIN_RES(
      builder,
      _o.Result,
      _creature_info,
      _character_info,
      _money);
  }
};

public class SC_LOGIN_REST
{
  public GamePacket.ErrorCode Result { get; set; }
  public Info.CreatureInfoT CreatureInfo { get; set; }
  public GamePacket.MyCharacterInfoT CharacterInfo { get; set; }
  public Info.MoneyWrapperT Money { get; set; }

  public SC_LOGIN_REST() {
    this.Result = GamePacket.ErrorCode.SUCCESS;
    this.CreatureInfo = null;
    this.CharacterInfo = null;
    this.Money = null;
  }
}

public struct SC_PING_REQ : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static SC_PING_REQ GetRootAsSC_PING_REQ(ByteBuffer _bb) { return GetRootAsSC_PING_REQ(_bb, new SC_PING_REQ()); }
  public static SC_PING_REQ GetRootAsSC_PING_REQ(ByteBuffer _bb, SC_PING_REQ obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SC_PING_REQ __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartSC_PING_REQ(FlatBufferBuilder builder) { builder.StartTable(0); }
  public static Offset<GamePacket.SC_PING_REQ> EndSC_PING_REQ(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<GamePacket.SC_PING_REQ>(o);
  }
  public SC_PING_REQT UnPack() {
    var _o = new SC_PING_REQT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SC_PING_REQT _o) {
  }
  public static Offset<GamePacket.SC_PING_REQ> Pack(FlatBufferBuilder builder, SC_PING_REQT _o) {
    if (_o == null) return default(Offset<GamePacket.SC_PING_REQ>);
    StartSC_PING_REQ(builder);
    return EndSC_PING_REQ(builder);
  }
};

public class SC_PING_REQT
{

  public SC_PING_REQT() {
  }
}

public struct CS_PING_RES : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static CS_PING_RES GetRootAsCS_PING_RES(ByteBuffer _bb) { return GetRootAsCS_PING_RES(_bb, new CS_PING_RES()); }
  public static CS_PING_RES GetRootAsCS_PING_RES(ByteBuffer _bb, CS_PING_RES obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CS_PING_RES __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartCS_PING_RES(FlatBufferBuilder builder) { builder.StartTable(0); }
  public static Offset<GamePacket.CS_PING_RES> EndCS_PING_RES(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<GamePacket.CS_PING_RES>(o);
  }
  public CS_PING_REST UnPack() {
    var _o = new CS_PING_REST();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(CS_PING_REST _o) {
  }
  public static Offset<GamePacket.CS_PING_RES> Pack(FlatBufferBuilder builder, CS_PING_REST _o) {
    if (_o == null) return default(Offset<GamePacket.CS_PING_RES>);
    StartCS_PING_RES(builder);
    return EndCS_PING_RES(builder);
  }
};

public class CS_PING_REST
{

  public CS_PING_REST() {
  }
}

public struct CS_LOGOUT_NOTI : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static CS_LOGOUT_NOTI GetRootAsCS_LOGOUT_NOTI(ByteBuffer _bb) { return GetRootAsCS_LOGOUT_NOTI(_bb, new CS_LOGOUT_NOTI()); }
  public static CS_LOGOUT_NOTI GetRootAsCS_LOGOUT_NOTI(ByteBuffer _bb, CS_LOGOUT_NOTI obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CS_LOGOUT_NOTI __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartCS_LOGOUT_NOTI(FlatBufferBuilder builder) { builder.StartTable(0); }
  public static Offset<GamePacket.CS_LOGOUT_NOTI> EndCS_LOGOUT_NOTI(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<GamePacket.CS_LOGOUT_NOTI>(o);
  }
  public CS_LOGOUT_NOTIT UnPack() {
    var _o = new CS_LOGOUT_NOTIT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(CS_LOGOUT_NOTIT _o) {
  }
  public static Offset<GamePacket.CS_LOGOUT_NOTI> Pack(FlatBufferBuilder builder, CS_LOGOUT_NOTIT _o) {
    if (_o == null) return default(Offset<GamePacket.CS_LOGOUT_NOTI>);
    StartCS_LOGOUT_NOTI(builder);
    return EndCS_LOGOUT_NOTI(builder);
  }
};

public class CS_LOGOUT_NOTIT
{

  public CS_LOGOUT_NOTIT() {
  }
}

public struct SC_SPAWN_PLAYER_NOTI : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static SC_SPAWN_PLAYER_NOTI GetRootAsSC_SPAWN_PLAYER_NOTI(ByteBuffer _bb) { return GetRootAsSC_SPAWN_PLAYER_NOTI(_bb, new SC_SPAWN_PLAYER_NOTI()); }
  public static SC_SPAWN_PLAYER_NOTI GetRootAsSC_SPAWN_PLAYER_NOTI(ByteBuffer _bb, SC_SPAWN_PLAYER_NOTI obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SC_SPAWN_PLAYER_NOTI __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Info.CreatureInfo? CreatureInfo { get { int o = __p.__offset(4); return o != 0 ? (Info.CreatureInfo?)(new Info.CreatureInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public GamePacket.CharacterInfo? CharacterInfo { get { int o = __p.__offset(6); return o != 0 ? (GamePacket.CharacterInfo?)(new GamePacket.CharacterInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<GamePacket.SC_SPAWN_PLAYER_NOTI> CreateSC_SPAWN_PLAYER_NOTI(FlatBufferBuilder builder,
      Offset<Info.CreatureInfo> creature_infoOffset = default(Offset<Info.CreatureInfo>),
      Offset<GamePacket.CharacterInfo> character_infoOffset = default(Offset<GamePacket.CharacterInfo>)) {
    builder.StartTable(2);
    SC_SPAWN_PLAYER_NOTI.AddCharacterInfo(builder, character_infoOffset);
    SC_SPAWN_PLAYER_NOTI.AddCreatureInfo(builder, creature_infoOffset);
    return SC_SPAWN_PLAYER_NOTI.EndSC_SPAWN_PLAYER_NOTI(builder);
  }

  public static void StartSC_SPAWN_PLAYER_NOTI(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddCreatureInfo(FlatBufferBuilder builder, Offset<Info.CreatureInfo> creatureInfoOffset) { builder.AddOffset(0, creatureInfoOffset.Value, 0); }
  public static void AddCharacterInfo(FlatBufferBuilder builder, Offset<GamePacket.CharacterInfo> characterInfoOffset) { builder.AddOffset(1, characterInfoOffset.Value, 0); }
  public static Offset<GamePacket.SC_SPAWN_PLAYER_NOTI> EndSC_SPAWN_PLAYER_NOTI(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<GamePacket.SC_SPAWN_PLAYER_NOTI>(o);
  }
  public SC_SPAWN_PLAYER_NOTIT UnPack() {
    var _o = new SC_SPAWN_PLAYER_NOTIT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SC_SPAWN_PLAYER_NOTIT _o) {
    _o.CreatureInfo = this.CreatureInfo.HasValue ? this.CreatureInfo.Value.UnPack() : null;
    _o.CharacterInfo = this.CharacterInfo.HasValue ? this.CharacterInfo.Value.UnPack() : null;
  }
  public static Offset<GamePacket.SC_SPAWN_PLAYER_NOTI> Pack(FlatBufferBuilder builder, SC_SPAWN_PLAYER_NOTIT _o) {
    if (_o == null) return default(Offset<GamePacket.SC_SPAWN_PLAYER_NOTI>);
    var _creature_info = _o.CreatureInfo == null ? default(Offset<Info.CreatureInfo>) : Info.CreatureInfo.Pack(builder, _o.CreatureInfo);
    var _character_info = _o.CharacterInfo == null ? default(Offset<GamePacket.CharacterInfo>) : GamePacket.CharacterInfo.Pack(builder, _o.CharacterInfo);
    return CreateSC_SPAWN_PLAYER_NOTI(
      builder,
      _creature_info,
      _character_info);
  }
};

public class SC_SPAWN_PLAYER_NOTIT
{
  public Info.CreatureInfoT CreatureInfo { get; set; }
  public GamePacket.CharacterInfoT CharacterInfo { get; set; }

  public SC_SPAWN_PLAYER_NOTIT() {
    this.CreatureInfo = null;
    this.CharacterInfo = null;
  }
}

public struct SC_DESPAWN_OBJECT_NOTI : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static SC_DESPAWN_OBJECT_NOTI GetRootAsSC_DESPAWN_OBJECT_NOTI(ByteBuffer _bb) { return GetRootAsSC_DESPAWN_OBJECT_NOTI(_bb, new SC_DESPAWN_OBJECT_NOTI()); }
  public static SC_DESPAWN_OBJECT_NOTI GetRootAsSC_DESPAWN_OBJECT_NOTI(ByteBuffer _bb, SC_DESPAWN_OBJECT_NOTI obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SC_DESPAWN_OBJECT_NOTI __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Define.ObjectType ObjectType { get { int o = __p.__offset(4); return o != 0 ? (Define.ObjectType)__p.bb.Get(o + __p.bb_pos) : Define.ObjectType.PLAYER; } }
  public long Uid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }

  public static Offset<GamePacket.SC_DESPAWN_OBJECT_NOTI> CreateSC_DESPAWN_OBJECT_NOTI(FlatBufferBuilder builder,
      Define.ObjectType object_type = Define.ObjectType.PLAYER,
      long uid = 0) {
    builder.StartTable(2);
    SC_DESPAWN_OBJECT_NOTI.AddUid(builder, uid);
    SC_DESPAWN_OBJECT_NOTI.AddObjectType(builder, object_type);
    return SC_DESPAWN_OBJECT_NOTI.EndSC_DESPAWN_OBJECT_NOTI(builder);
  }

  public static void StartSC_DESPAWN_OBJECT_NOTI(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddObjectType(FlatBufferBuilder builder, Define.ObjectType objectType) { builder.AddByte(0, (byte)objectType, 0); }
  public static void AddUid(FlatBufferBuilder builder, long uid) { builder.AddLong(1, uid, 0); }
  public static Offset<GamePacket.SC_DESPAWN_OBJECT_NOTI> EndSC_DESPAWN_OBJECT_NOTI(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<GamePacket.SC_DESPAWN_OBJECT_NOTI>(o);
  }
  public SC_DESPAWN_OBJECT_NOTIT UnPack() {
    var _o = new SC_DESPAWN_OBJECT_NOTIT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SC_DESPAWN_OBJECT_NOTIT _o) {
    _o.ObjectType = this.ObjectType;
    _o.Uid = this.Uid;
  }
  public static Offset<GamePacket.SC_DESPAWN_OBJECT_NOTI> Pack(FlatBufferBuilder builder, SC_DESPAWN_OBJECT_NOTIT _o) {
    if (_o == null) return default(Offset<GamePacket.SC_DESPAWN_OBJECT_NOTI>);
    return CreateSC_DESPAWN_OBJECT_NOTI(
      builder,
      _o.ObjectType,
      _o.Uid);
  }
};

public class SC_DESPAWN_OBJECT_NOTIT
{
  public Define.ObjectType ObjectType { get; set; }
  public long Uid { get; set; }

  public SC_DESPAWN_OBJECT_NOTIT() {
    this.ObjectType = Define.ObjectType.PLAYER;
    this.Uid = 0;
  }
}

public struct CS_MOVE_REQ : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static CS_MOVE_REQ GetRootAsCS_MOVE_REQ(ByteBuffer _bb) { return GetRootAsCS_MOVE_REQ(_bb, new CS_MOVE_REQ()); }
  public static CS_MOVE_REQ GetRootAsCS_MOVE_REQ(ByteBuffer _bb, CS_MOVE_REQ obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CS_MOVE_REQ __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Info.PositionInfo? PosInfo { get { int o = __p.__offset(4); return o != 0 ? (Info.PositionInfo?)(new Info.PositionInfo()).__assign(o + __p.bb_pos, __p.bb) : null; } }

  public static void StartCS_MOVE_REQ(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddPosInfo(FlatBufferBuilder builder, Offset<Info.PositionInfo> posInfoOffset) { builder.AddStruct(0, posInfoOffset.Value, 0); }
  public static Offset<GamePacket.CS_MOVE_REQ> EndCS_MOVE_REQ(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<GamePacket.CS_MOVE_REQ>(o);
  }
  public CS_MOVE_REQT UnPack() {
    var _o = new CS_MOVE_REQT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(CS_MOVE_REQT _o) {
    _o.PosInfo = this.PosInfo.HasValue ? this.PosInfo.Value.UnPack() : null;
  }
  public static Offset<GamePacket.CS_MOVE_REQ> Pack(FlatBufferBuilder builder, CS_MOVE_REQT _o) {
    if (_o == null) return default(Offset<GamePacket.CS_MOVE_REQ>);
    StartCS_MOVE_REQ(builder);
    AddPosInfo(builder, Info.PositionInfo.Pack(builder, _o.PosInfo));
    return EndCS_MOVE_REQ(builder);
  }
};

public class CS_MOVE_REQT
{
  public Info.PositionInfoT PosInfo { get; set; }

  public CS_MOVE_REQT() {
    this.PosInfo = new Info.PositionInfoT();
  }
}

public struct SC_MOVE_RES : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static SC_MOVE_RES GetRootAsSC_MOVE_RES(ByteBuffer _bb) { return GetRootAsSC_MOVE_RES(_bb, new SC_MOVE_RES()); }
  public static SC_MOVE_RES GetRootAsSC_MOVE_RES(ByteBuffer _bb, SC_MOVE_RES obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SC_MOVE_RES __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Define.ObjectType ObjectType { get { int o = __p.__offset(4); return o != 0 ? (Define.ObjectType)__p.bb.Get(o + __p.bb_pos) : Define.ObjectType.PLAYER; } }
  public long ObjectId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public Info.PositionInfo? PosInfo { get { int o = __p.__offset(8); return o != 0 ? (Info.PositionInfo?)(new Info.PositionInfo()).__assign(o + __p.bb_pos, __p.bb) : null; } }

  public static Offset<GamePacket.SC_MOVE_RES> CreateSC_MOVE_RES(FlatBufferBuilder builder,
      Define.ObjectType object_type = Define.ObjectType.PLAYER,
      long object_id = 0,
      Info.PositionInfoT pos_info = null) {
    builder.StartTable(3);
    SC_MOVE_RES.AddObjectId(builder, object_id);
    SC_MOVE_RES.AddPosInfo(builder, Info.PositionInfo.Pack(builder, pos_info));
    SC_MOVE_RES.AddObjectType(builder, object_type);
    return SC_MOVE_RES.EndSC_MOVE_RES(builder);
  }

  public static void StartSC_MOVE_RES(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddObjectType(FlatBufferBuilder builder, Define.ObjectType objectType) { builder.AddByte(0, (byte)objectType, 0); }
  public static void AddObjectId(FlatBufferBuilder builder, long objectId) { builder.AddLong(1, objectId, 0); }
  public static void AddPosInfo(FlatBufferBuilder builder, Offset<Info.PositionInfo> posInfoOffset) { builder.AddStruct(2, posInfoOffset.Value, 0); }
  public static Offset<GamePacket.SC_MOVE_RES> EndSC_MOVE_RES(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<GamePacket.SC_MOVE_RES>(o);
  }
  public SC_MOVE_REST UnPack() {
    var _o = new SC_MOVE_REST();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SC_MOVE_REST _o) {
    _o.ObjectType = this.ObjectType;
    _o.ObjectId = this.ObjectId;
    _o.PosInfo = this.PosInfo.HasValue ? this.PosInfo.Value.UnPack() : null;
  }
  public static Offset<GamePacket.SC_MOVE_RES> Pack(FlatBufferBuilder builder, SC_MOVE_REST _o) {
    if (_o == null) return default(Offset<GamePacket.SC_MOVE_RES>);
    return CreateSC_MOVE_RES(
      builder,
      _o.ObjectType,
      _o.ObjectId,
      _o.PosInfo);
  }
};

public class SC_MOVE_REST
{
  public Define.ObjectType ObjectType { get; set; }
  public long ObjectId { get; set; }
  public Info.PositionInfoT PosInfo { get; set; }

  public SC_MOVE_REST() {
    this.ObjectType = Define.ObjectType.PLAYER;
    this.ObjectId = 0;
    this.PosInfo = new Info.PositionInfoT();
  }
}

public struct CS_SET_STATE_REQ : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static CS_SET_STATE_REQ GetRootAsCS_SET_STATE_REQ(ByteBuffer _bb) { return GetRootAsCS_SET_STATE_REQ(_bb, new CS_SET_STATE_REQ()); }
  public static CS_SET_STATE_REQ GetRootAsCS_SET_STATE_REQ(ByteBuffer _bb, CS_SET_STATE_REQ obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CS_SET_STATE_REQ __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Define.CreatureState State { get { int o = __p.__offset(4); return o != 0 ? (Define.CreatureState)__p.bb.Get(o + __p.bb_pos) : Define.CreatureState.IDLE; } }

  public static Offset<GamePacket.CS_SET_STATE_REQ> CreateCS_SET_STATE_REQ(FlatBufferBuilder builder,
      Define.CreatureState state = Define.CreatureState.IDLE) {
    builder.StartTable(1);
    CS_SET_STATE_REQ.AddState(builder, state);
    return CS_SET_STATE_REQ.EndCS_SET_STATE_REQ(builder);
  }

  public static void StartCS_SET_STATE_REQ(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddState(FlatBufferBuilder builder, Define.CreatureState state) { builder.AddByte(0, (byte)state, 0); }
  public static Offset<GamePacket.CS_SET_STATE_REQ> EndCS_SET_STATE_REQ(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<GamePacket.CS_SET_STATE_REQ>(o);
  }
  public CS_SET_STATE_REQT UnPack() {
    var _o = new CS_SET_STATE_REQT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(CS_SET_STATE_REQT _o) {
    _o.State = this.State;
  }
  public static Offset<GamePacket.CS_SET_STATE_REQ> Pack(FlatBufferBuilder builder, CS_SET_STATE_REQT _o) {
    if (_o == null) return default(Offset<GamePacket.CS_SET_STATE_REQ>);
    return CreateCS_SET_STATE_REQ(
      builder,
      _o.State);
  }
};

public class CS_SET_STATE_REQT
{
  public Define.CreatureState State { get; set; }

  public CS_SET_STATE_REQT() {
    this.State = Define.CreatureState.IDLE;
  }
}

public struct SC_SET_STATE_RES : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static SC_SET_STATE_RES GetRootAsSC_SET_STATE_RES(ByteBuffer _bb) { return GetRootAsSC_SET_STATE_RES(_bb, new SC_SET_STATE_RES()); }
  public static SC_SET_STATE_RES GetRootAsSC_SET_STATE_RES(ByteBuffer _bb, SC_SET_STATE_RES obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SC_SET_STATE_RES __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Define.ObjectType ObjectType { get { int o = __p.__offset(4); return o != 0 ? (Define.ObjectType)__p.bb.Get(o + __p.bb_pos) : Define.ObjectType.PLAYER; } }
  public long ObjectId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public Define.CreatureState State { get { int o = __p.__offset(8); return o != 0 ? (Define.CreatureState)__p.bb.Get(o + __p.bb_pos) : Define.CreatureState.IDLE; } }

  public static Offset<GamePacket.SC_SET_STATE_RES> CreateSC_SET_STATE_RES(FlatBufferBuilder builder,
      Define.ObjectType object_type = Define.ObjectType.PLAYER,
      long object_id = 0,
      Define.CreatureState state = Define.CreatureState.IDLE) {
    builder.StartTable(3);
    SC_SET_STATE_RES.AddObjectId(builder, object_id);
    SC_SET_STATE_RES.AddState(builder, state);
    SC_SET_STATE_RES.AddObjectType(builder, object_type);
    return SC_SET_STATE_RES.EndSC_SET_STATE_RES(builder);
  }

  public static void StartSC_SET_STATE_RES(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddObjectType(FlatBufferBuilder builder, Define.ObjectType objectType) { builder.AddByte(0, (byte)objectType, 0); }
  public static void AddObjectId(FlatBufferBuilder builder, long objectId) { builder.AddLong(1, objectId, 0); }
  public static void AddState(FlatBufferBuilder builder, Define.CreatureState state) { builder.AddByte(2, (byte)state, 0); }
  public static Offset<GamePacket.SC_SET_STATE_RES> EndSC_SET_STATE_RES(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<GamePacket.SC_SET_STATE_RES>(o);
  }
  public SC_SET_STATE_REST UnPack() {
    var _o = new SC_SET_STATE_REST();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SC_SET_STATE_REST _o) {
    _o.ObjectType = this.ObjectType;
    _o.ObjectId = this.ObjectId;
    _o.State = this.State;
  }
  public static Offset<GamePacket.SC_SET_STATE_RES> Pack(FlatBufferBuilder builder, SC_SET_STATE_REST _o) {
    if (_o == null) return default(Offset<GamePacket.SC_SET_STATE_RES>);
    return CreateSC_SET_STATE_RES(
      builder,
      _o.ObjectType,
      _o.ObjectId,
      _o.State);
  }
};

public class SC_SET_STATE_REST
{
  public Define.ObjectType ObjectType { get; set; }
  public long ObjectId { get; set; }
  public Define.CreatureState State { get; set; }

  public SC_SET_STATE_REST() {
    this.ObjectType = Define.ObjectType.PLAYER;
    this.ObjectId = 0;
    this.State = Define.CreatureState.IDLE;
  }
}

public struct CS_USE_SKILL_REQ : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static CS_USE_SKILL_REQ GetRootAsCS_USE_SKILL_REQ(ByteBuffer _bb) { return GetRootAsCS_USE_SKILL_REQ(_bb, new CS_USE_SKILL_REQ()); }
  public static CS_USE_SKILL_REQ GetRootAsCS_USE_SKILL_REQ(ByteBuffer _bb, CS_USE_SKILL_REQ obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CS_USE_SKILL_REQ __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int SkillId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<GamePacket.CS_USE_SKILL_REQ> CreateCS_USE_SKILL_REQ(FlatBufferBuilder builder,
      int skill_id = 0) {
    builder.StartTable(1);
    CS_USE_SKILL_REQ.AddSkillId(builder, skill_id);
    return CS_USE_SKILL_REQ.EndCS_USE_SKILL_REQ(builder);
  }

  public static void StartCS_USE_SKILL_REQ(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddSkillId(FlatBufferBuilder builder, int skillId) { builder.AddInt(0, skillId, 0); }
  public static Offset<GamePacket.CS_USE_SKILL_REQ> EndCS_USE_SKILL_REQ(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<GamePacket.CS_USE_SKILL_REQ>(o);
  }
  public CS_USE_SKILL_REQT UnPack() {
    var _o = new CS_USE_SKILL_REQT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(CS_USE_SKILL_REQT _o) {
    _o.SkillId = this.SkillId;
  }
  public static Offset<GamePacket.CS_USE_SKILL_REQ> Pack(FlatBufferBuilder builder, CS_USE_SKILL_REQT _o) {
    if (_o == null) return default(Offset<GamePacket.CS_USE_SKILL_REQ>);
    return CreateCS_USE_SKILL_REQ(
      builder,
      _o.SkillId);
  }
};

public class CS_USE_SKILL_REQT
{
  public int SkillId { get; set; }

  public CS_USE_SKILL_REQT() {
    this.SkillId = 0;
  }
}

public struct SC_USE_SKILL_RES : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static SC_USE_SKILL_RES GetRootAsSC_USE_SKILL_RES(ByteBuffer _bb) { return GetRootAsSC_USE_SKILL_RES(_bb, new SC_USE_SKILL_RES()); }
  public static SC_USE_SKILL_RES GetRootAsSC_USE_SKILL_RES(ByteBuffer _bb, SC_USE_SKILL_RES obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SC_USE_SKILL_RES __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Define.ObjectType ObjectType { get { int o = __p.__offset(4); return o != 0 ? (Define.ObjectType)__p.bb.Get(o + __p.bb_pos) : Define.ObjectType.PLAYER; } }
  public long ObjectId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public int SkillId { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<GamePacket.SC_USE_SKILL_RES> CreateSC_USE_SKILL_RES(FlatBufferBuilder builder,
      Define.ObjectType object_type = Define.ObjectType.PLAYER,
      long object_id = 0,
      int skill_id = 0) {
    builder.StartTable(3);
    SC_USE_SKILL_RES.AddObjectId(builder, object_id);
    SC_USE_SKILL_RES.AddSkillId(builder, skill_id);
    SC_USE_SKILL_RES.AddObjectType(builder, object_type);
    return SC_USE_SKILL_RES.EndSC_USE_SKILL_RES(builder);
  }

  public static void StartSC_USE_SKILL_RES(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddObjectType(FlatBufferBuilder builder, Define.ObjectType objectType) { builder.AddByte(0, (byte)objectType, 0); }
  public static void AddObjectId(FlatBufferBuilder builder, long objectId) { builder.AddLong(1, objectId, 0); }
  public static void AddSkillId(FlatBufferBuilder builder, int skillId) { builder.AddInt(2, skillId, 0); }
  public static Offset<GamePacket.SC_USE_SKILL_RES> EndSC_USE_SKILL_RES(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<GamePacket.SC_USE_SKILL_RES>(o);
  }
  public SC_USE_SKILL_REST UnPack() {
    var _o = new SC_USE_SKILL_REST();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SC_USE_SKILL_REST _o) {
    _o.ObjectType = this.ObjectType;
    _o.ObjectId = this.ObjectId;
    _o.SkillId = this.SkillId;
  }
  public static Offset<GamePacket.SC_USE_SKILL_RES> Pack(FlatBufferBuilder builder, SC_USE_SKILL_REST _o) {
    if (_o == null) return default(Offset<GamePacket.SC_USE_SKILL_RES>);
    return CreateSC_USE_SKILL_RES(
      builder,
      _o.ObjectType,
      _o.ObjectId,
      _o.SkillId);
  }
};

public class SC_USE_SKILL_REST
{
  public Define.ObjectType ObjectType { get; set; }
  public long ObjectId { get; set; }
  public int SkillId { get; set; }

  public SC_USE_SKILL_REST() {
    this.ObjectType = Define.ObjectType.PLAYER;
    this.ObjectId = 0;
    this.SkillId = 0;
  }
}

public struct DamageInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static DamageInfo GetRootAsDamageInfo(ByteBuffer _bb) { return GetRootAsDamageInfo(_bb, new DamageInfo()); }
  public static DamageInfo GetRootAsDamageInfo(ByteBuffer _bb, DamageInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public DamageInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Define.ObjectType ObjectType { get { int o = __p.__offset(4); return o != 0 ? (Define.ObjectType)__p.bb.Get(o + __p.bb_pos) : Define.ObjectType.PLAYER; } }
  public long Oid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public int Damage { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public bool IsCritical { get { int o = __p.__offset(10); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<GamePacket.DamageInfo> CreateDamageInfo(FlatBufferBuilder builder,
      Define.ObjectType object_type = Define.ObjectType.PLAYER,
      long oid = 0,
      int damage = 0,
      bool is_critical = false) {
    builder.StartTable(4);
    DamageInfo.AddOid(builder, oid);
    DamageInfo.AddDamage(builder, damage);
    DamageInfo.AddIsCritical(builder, is_critical);
    DamageInfo.AddObjectType(builder, object_type);
    return DamageInfo.EndDamageInfo(builder);
  }

  public static void StartDamageInfo(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddObjectType(FlatBufferBuilder builder, Define.ObjectType objectType) { builder.AddByte(0, (byte)objectType, 0); }
  public static void AddOid(FlatBufferBuilder builder, long oid) { builder.AddLong(1, oid, 0); }
  public static void AddDamage(FlatBufferBuilder builder, int damage) { builder.AddInt(2, damage, 0); }
  public static void AddIsCritical(FlatBufferBuilder builder, bool isCritical) { builder.AddBool(3, isCritical, false); }
  public static Offset<GamePacket.DamageInfo> EndDamageInfo(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<GamePacket.DamageInfo>(o);
  }
  public DamageInfoT UnPack() {
    var _o = new DamageInfoT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(DamageInfoT _o) {
    _o.ObjectType = this.ObjectType;
    _o.Oid = this.Oid;
    _o.Damage = this.Damage;
    _o.IsCritical = this.IsCritical;
  }
  public static Offset<GamePacket.DamageInfo> Pack(FlatBufferBuilder builder, DamageInfoT _o) {
    if (_o == null) return default(Offset<GamePacket.DamageInfo>);
    return CreateDamageInfo(
      builder,
      _o.ObjectType,
      _o.Oid,
      _o.Damage,
      _o.IsCritical);
  }
};

public class DamageInfoT
{
  public Define.ObjectType ObjectType { get; set; }
  public long Oid { get; set; }
  public int Damage { get; set; }
  public bool IsCritical { get; set; }

  public DamageInfoT() {
    this.ObjectType = Define.ObjectType.PLAYER;
    this.Oid = 0;
    this.Damage = 0;
    this.IsCritical = false;
  }
}

public struct SC_GET_DAMAGE_NOTI : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static SC_GET_DAMAGE_NOTI GetRootAsSC_GET_DAMAGE_NOTI(ByteBuffer _bb) { return GetRootAsSC_GET_DAMAGE_NOTI(_bb, new SC_GET_DAMAGE_NOTI()); }
  public static SC_GET_DAMAGE_NOTI GetRootAsSC_GET_DAMAGE_NOTI(ByteBuffer _bb, SC_GET_DAMAGE_NOTI obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SC_GET_DAMAGE_NOTI __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public GamePacket.DamageInfo? DamageInfo(int j) { int o = __p.__offset(4); return o != 0 ? (GamePacket.DamageInfo?)(new GamePacket.DamageInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int DamageInfoLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<GamePacket.SC_GET_DAMAGE_NOTI> CreateSC_GET_DAMAGE_NOTI(FlatBufferBuilder builder,
      VectorOffset damage_infoOffset = default(VectorOffset)) {
    builder.StartTable(1);
    SC_GET_DAMAGE_NOTI.AddDamageInfo(builder, damage_infoOffset);
    return SC_GET_DAMAGE_NOTI.EndSC_GET_DAMAGE_NOTI(builder);
  }

  public static void StartSC_GET_DAMAGE_NOTI(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddDamageInfo(FlatBufferBuilder builder, VectorOffset damageInfoOffset) { builder.AddOffset(0, damageInfoOffset.Value, 0); }
  public static VectorOffset CreateDamageInfoVector(FlatBufferBuilder builder, Offset<GamePacket.DamageInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateDamageInfoVectorBlock(FlatBufferBuilder builder, Offset<GamePacket.DamageInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartDamageInfoVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<GamePacket.SC_GET_DAMAGE_NOTI> EndSC_GET_DAMAGE_NOTI(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<GamePacket.SC_GET_DAMAGE_NOTI>(o);
  }
  public SC_GET_DAMAGE_NOTIT UnPack() {
    var _o = new SC_GET_DAMAGE_NOTIT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SC_GET_DAMAGE_NOTIT _o) {
    _o.DamageInfo = new List<GamePacket.DamageInfoT>();
    for (var _j = 0; _j < this.DamageInfoLength; ++_j) {_o.DamageInfo.Add(this.DamageInfo(_j).HasValue ? this.DamageInfo(_j).Value.UnPack() : null);}
  }
  public static Offset<GamePacket.SC_GET_DAMAGE_NOTI> Pack(FlatBufferBuilder builder, SC_GET_DAMAGE_NOTIT _o) {
    if (_o == null) return default(Offset<GamePacket.SC_GET_DAMAGE_NOTI>);
    var _damage_info = default(VectorOffset);
    if (_o.DamageInfo != null) {
      var __damage_info = new Offset<GamePacket.DamageInfo>[_o.DamageInfo.Count];
      for (var _j = 0; _j < __damage_info.Length; ++_j) { __damage_info[_j] = GamePacket.DamageInfo.Pack(builder, _o.DamageInfo[_j]); }
      _damage_info = CreateDamageInfoVector(builder, __damage_info);
    }
    return CreateSC_GET_DAMAGE_NOTI(
      builder,
      _damage_info);
  }
};

public class SC_GET_DAMAGE_NOTIT
{
  public List<GamePacket.DamageInfoT> DamageInfo { get; set; }

  public SC_GET_DAMAGE_NOTIT() {
    this.DamageInfo = null;
  }
}

public struct CS_REVIVE_REQ : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static CS_REVIVE_REQ GetRootAsCS_REVIVE_REQ(ByteBuffer _bb) { return GetRootAsCS_REVIVE_REQ(_bb, new CS_REVIVE_REQ()); }
  public static CS_REVIVE_REQ GetRootAsCS_REVIVE_REQ(ByteBuffer _bb, CS_REVIVE_REQ obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CS_REVIVE_REQ __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartCS_REVIVE_REQ(FlatBufferBuilder builder) { builder.StartTable(0); }
  public static Offset<GamePacket.CS_REVIVE_REQ> EndCS_REVIVE_REQ(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<GamePacket.CS_REVIVE_REQ>(o);
  }
  public CS_REVIVE_REQT UnPack() {
    var _o = new CS_REVIVE_REQT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(CS_REVIVE_REQT _o) {
  }
  public static Offset<GamePacket.CS_REVIVE_REQ> Pack(FlatBufferBuilder builder, CS_REVIVE_REQT _o) {
    if (_o == null) return default(Offset<GamePacket.CS_REVIVE_REQ>);
    StartCS_REVIVE_REQ(builder);
    return EndCS_REVIVE_REQ(builder);
  }
};

public class CS_REVIVE_REQT
{

  public CS_REVIVE_REQT() {
  }
}

public struct SC_REVIVE_RES : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static SC_REVIVE_RES GetRootAsSC_REVIVE_RES(ByteBuffer _bb) { return GetRootAsSC_REVIVE_RES(_bb, new SC_REVIVE_RES()); }
  public static SC_REVIVE_RES GetRootAsSC_REVIVE_RES(ByteBuffer _bb, SC_REVIVE_RES obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SC_REVIVE_RES __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Define.ObjectType ObjectType { get { int o = __p.__offset(4); return o != 0 ? (Define.ObjectType)__p.bb.Get(o + __p.bb_pos) : Define.ObjectType.PLAYER; } }
  public long Oid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public Info.PositionInfo? PosInfo { get { int o = __p.__offset(8); return o != 0 ? (Info.PositionInfo?)(new Info.PositionInfo()).__assign(o + __p.bb_pos, __p.bb) : null; } }

  public static Offset<GamePacket.SC_REVIVE_RES> CreateSC_REVIVE_RES(FlatBufferBuilder builder,
      Define.ObjectType object_type = Define.ObjectType.PLAYER,
      long oid = 0,
      Info.PositionInfoT pos_info = null) {
    builder.StartTable(3);
    SC_REVIVE_RES.AddOid(builder, oid);
    SC_REVIVE_RES.AddPosInfo(builder, Info.PositionInfo.Pack(builder, pos_info));
    SC_REVIVE_RES.AddObjectType(builder, object_type);
    return SC_REVIVE_RES.EndSC_REVIVE_RES(builder);
  }

  public static void StartSC_REVIVE_RES(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddObjectType(FlatBufferBuilder builder, Define.ObjectType objectType) { builder.AddByte(0, (byte)objectType, 0); }
  public static void AddOid(FlatBufferBuilder builder, long oid) { builder.AddLong(1, oid, 0); }
  public static void AddPosInfo(FlatBufferBuilder builder, Offset<Info.PositionInfo> posInfoOffset) { builder.AddStruct(2, posInfoOffset.Value, 0); }
  public static Offset<GamePacket.SC_REVIVE_RES> EndSC_REVIVE_RES(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<GamePacket.SC_REVIVE_RES>(o);
  }
  public SC_REVIVE_REST UnPack() {
    var _o = new SC_REVIVE_REST();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SC_REVIVE_REST _o) {
    _o.ObjectType = this.ObjectType;
    _o.Oid = this.Oid;
    _o.PosInfo = this.PosInfo.HasValue ? this.PosInfo.Value.UnPack() : null;
  }
  public static Offset<GamePacket.SC_REVIVE_RES> Pack(FlatBufferBuilder builder, SC_REVIVE_REST _o) {
    if (_o == null) return default(Offset<GamePacket.SC_REVIVE_RES>);
    return CreateSC_REVIVE_RES(
      builder,
      _o.ObjectType,
      _o.Oid,
      _o.PosInfo);
  }
};

public class SC_REVIVE_REST
{
  public Define.ObjectType ObjectType { get; set; }
  public long Oid { get; set; }
  public Info.PositionInfoT PosInfo { get; set; }

  public SC_REVIVE_REST() {
    this.ObjectType = Define.ObjectType.PLAYER;
    this.Oid = 0;
    this.PosInfo = new Info.PositionInfoT();
  }
}

public struct Root : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static Root GetRootAsRoot(ByteBuffer _bb) { return GetRootAsRoot(_bb, new Root()); }
  public static Root GetRootAsRoot(ByteBuffer _bb, Root obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Root __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public GamePacket.Packet PacketType { get { int o = __p.__offset(4); return o != 0 ? (GamePacket.Packet)__p.bb.Get(o + __p.bb_pos) : GamePacket.Packet.NONE; } }
  public TTable? Packet<TTable>() where TTable : struct, IFlatbufferObject { int o = __p.__offset(6); return o != 0 ? (TTable?)__p.__union<TTable>(o + __p.bb_pos) : null; }
  public GamePacket.CS_LOGIN_REQ PacketAsCS_LOGIN_REQ() { return Packet<GamePacket.CS_LOGIN_REQ>().Value; }
  public GamePacket.SC_LOGIN_RES PacketAsSC_LOGIN_RES() { return Packet<GamePacket.SC_LOGIN_RES>().Value; }
  public GamePacket.SC_PING_REQ PacketAsSC_PING_REQ() { return Packet<GamePacket.SC_PING_REQ>().Value; }
  public GamePacket.CS_PING_RES PacketAsCS_PING_RES() { return Packet<GamePacket.CS_PING_RES>().Value; }
  public GamePacket.CS_LOGOUT_NOTI PacketAsCS_LOGOUT_NOTI() { return Packet<GamePacket.CS_LOGOUT_NOTI>().Value; }
  public GamePacket.SC_SPAWN_PLAYER_NOTI PacketAsSC_SPAWN_PLAYER_NOTI() { return Packet<GamePacket.SC_SPAWN_PLAYER_NOTI>().Value; }
  public GamePacket.SC_DESPAWN_OBJECT_NOTI PacketAsSC_DESPAWN_OBJECT_NOTI() { return Packet<GamePacket.SC_DESPAWN_OBJECT_NOTI>().Value; }
  public GamePacket.CS_MOVE_REQ PacketAsCS_MOVE_REQ() { return Packet<GamePacket.CS_MOVE_REQ>().Value; }
  public GamePacket.SC_MOVE_RES PacketAsSC_MOVE_RES() { return Packet<GamePacket.SC_MOVE_RES>().Value; }
  public GamePacket.CS_SET_STATE_REQ PacketAsCS_SET_STATE_REQ() { return Packet<GamePacket.CS_SET_STATE_REQ>().Value; }
  public GamePacket.SC_SET_STATE_RES PacketAsSC_SET_STATE_RES() { return Packet<GamePacket.SC_SET_STATE_RES>().Value; }
  public GamePacket.CS_USE_SKILL_REQ PacketAsCS_USE_SKILL_REQ() { return Packet<GamePacket.CS_USE_SKILL_REQ>().Value; }
  public GamePacket.SC_USE_SKILL_RES PacketAsSC_USE_SKILL_RES() { return Packet<GamePacket.SC_USE_SKILL_RES>().Value; }
  public GamePacket.SC_GET_DAMAGE_NOTI PacketAsSC_GET_DAMAGE_NOTI() { return Packet<GamePacket.SC_GET_DAMAGE_NOTI>().Value; }
  public GamePacket.CS_REVIVE_REQ PacketAsCS_REVIVE_REQ() { return Packet<GamePacket.CS_REVIVE_REQ>().Value; }
  public GamePacket.SC_REVIVE_RES PacketAsSC_REVIVE_RES() { return Packet<GamePacket.SC_REVIVE_RES>().Value; }

  public static Offset<GamePacket.Root> CreateRoot(FlatBufferBuilder builder,
      GamePacket.Packet packet_type = GamePacket.Packet.NONE,
      int packetOffset = 0) {
    builder.StartTable(2);
    Root.AddPacket(builder, packetOffset);
    Root.AddPacketType(builder, packet_type);
    return Root.EndRoot(builder);
  }

  public static void StartRoot(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddPacketType(FlatBufferBuilder builder, GamePacket.Packet packetType) { builder.AddByte(0, (byte)packetType, 0); }
  public static void AddPacket(FlatBufferBuilder builder, int packetOffset) { builder.AddOffset(1, packetOffset, 0); }
  public static Offset<GamePacket.Root> EndRoot(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<GamePacket.Root>(o);
  }
  public static void FinishRootBuffer(FlatBufferBuilder builder, Offset<GamePacket.Root> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedRootBuffer(FlatBufferBuilder builder, Offset<GamePacket.Root> offset) { builder.FinishSizePrefixed(offset.Value); }
  public RootT UnPack() {
    var _o = new RootT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(RootT _o) {
    _o.Packet = new GamePacket.PacketUnion();
    _o.Packet.Type = this.PacketType;
    switch (this.PacketType) {
      default: break;
      case GamePacket.Packet.CS_LOGIN_REQ:
        _o.Packet.Value = this.Packet<GamePacket.CS_LOGIN_REQ>().HasValue ? this.Packet<GamePacket.CS_LOGIN_REQ>().Value.UnPack() : null;
        break;
      case GamePacket.Packet.SC_LOGIN_RES:
        _o.Packet.Value = this.Packet<GamePacket.SC_LOGIN_RES>().HasValue ? this.Packet<GamePacket.SC_LOGIN_RES>().Value.UnPack() : null;
        break;
      case GamePacket.Packet.SC_PING_REQ:
        _o.Packet.Value = this.Packet<GamePacket.SC_PING_REQ>().HasValue ? this.Packet<GamePacket.SC_PING_REQ>().Value.UnPack() : null;
        break;
      case GamePacket.Packet.CS_PING_RES:
        _o.Packet.Value = this.Packet<GamePacket.CS_PING_RES>().HasValue ? this.Packet<GamePacket.CS_PING_RES>().Value.UnPack() : null;
        break;
      case GamePacket.Packet.CS_LOGOUT_NOTI:
        _o.Packet.Value = this.Packet<GamePacket.CS_LOGOUT_NOTI>().HasValue ? this.Packet<GamePacket.CS_LOGOUT_NOTI>().Value.UnPack() : null;
        break;
      case GamePacket.Packet.SC_SPAWN_PLAYER_NOTI:
        _o.Packet.Value = this.Packet<GamePacket.SC_SPAWN_PLAYER_NOTI>().HasValue ? this.Packet<GamePacket.SC_SPAWN_PLAYER_NOTI>().Value.UnPack() : null;
        break;
      case GamePacket.Packet.SC_DESPAWN_OBJECT_NOTI:
        _o.Packet.Value = this.Packet<GamePacket.SC_DESPAWN_OBJECT_NOTI>().HasValue ? this.Packet<GamePacket.SC_DESPAWN_OBJECT_NOTI>().Value.UnPack() : null;
        break;
      case GamePacket.Packet.CS_MOVE_REQ:
        _o.Packet.Value = this.Packet<GamePacket.CS_MOVE_REQ>().HasValue ? this.Packet<GamePacket.CS_MOVE_REQ>().Value.UnPack() : null;
        break;
      case GamePacket.Packet.SC_MOVE_RES:
        _o.Packet.Value = this.Packet<GamePacket.SC_MOVE_RES>().HasValue ? this.Packet<GamePacket.SC_MOVE_RES>().Value.UnPack() : null;
        break;
      case GamePacket.Packet.CS_SET_STATE_REQ:
        _o.Packet.Value = this.Packet<GamePacket.CS_SET_STATE_REQ>().HasValue ? this.Packet<GamePacket.CS_SET_STATE_REQ>().Value.UnPack() : null;
        break;
      case GamePacket.Packet.SC_SET_STATE_RES:
        _o.Packet.Value = this.Packet<GamePacket.SC_SET_STATE_RES>().HasValue ? this.Packet<GamePacket.SC_SET_STATE_RES>().Value.UnPack() : null;
        break;
      case GamePacket.Packet.CS_USE_SKILL_REQ:
        _o.Packet.Value = this.Packet<GamePacket.CS_USE_SKILL_REQ>().HasValue ? this.Packet<GamePacket.CS_USE_SKILL_REQ>().Value.UnPack() : null;
        break;
      case GamePacket.Packet.SC_USE_SKILL_RES:
        _o.Packet.Value = this.Packet<GamePacket.SC_USE_SKILL_RES>().HasValue ? this.Packet<GamePacket.SC_USE_SKILL_RES>().Value.UnPack() : null;
        break;
      case GamePacket.Packet.SC_GET_DAMAGE_NOTI:
        _o.Packet.Value = this.Packet<GamePacket.SC_GET_DAMAGE_NOTI>().HasValue ? this.Packet<GamePacket.SC_GET_DAMAGE_NOTI>().Value.UnPack() : null;
        break;
      case GamePacket.Packet.CS_REVIVE_REQ:
        _o.Packet.Value = this.Packet<GamePacket.CS_REVIVE_REQ>().HasValue ? this.Packet<GamePacket.CS_REVIVE_REQ>().Value.UnPack() : null;
        break;
      case GamePacket.Packet.SC_REVIVE_RES:
        _o.Packet.Value = this.Packet<GamePacket.SC_REVIVE_RES>().HasValue ? this.Packet<GamePacket.SC_REVIVE_RES>().Value.UnPack() : null;
        break;
    }
  }
  public static Offset<GamePacket.Root> Pack(FlatBufferBuilder builder, RootT _o) {
    if (_o == null) return default(Offset<GamePacket.Root>);
    var _packet_type = _o.Packet == null ? GamePacket.Packet.NONE : _o.Packet.Type;
    var _packet = _o.Packet == null ? 0 : GamePacket.PacketUnion.Pack(builder, _o.Packet);
    return CreateRoot(
      builder,
      _packet_type,
      _packet);
  }
};

public class RootT
{
  public GamePacket.PacketUnion Packet { get; set; }

  public RootT() {
    this.Packet = null;
  }
  public static RootT DeserializeFromBinary(byte[] fbBuffer) {
    return Root.GetRootAsRoot(new ByteBuffer(fbBuffer)).UnPack();
  }
  public byte[] SerializeToBinary() {
    var fbb = new FlatBufferBuilder(0x10000);
    Root.FinishRootBuffer(fbb, Root.Pack(fbb, this));
    return fbb.DataBuffer.ToSizedArray();
  }
}


}
