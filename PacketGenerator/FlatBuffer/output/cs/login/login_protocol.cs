// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Login
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public enum Packet : byte
{
  NONE = 0,
  CS_LOGIN_REQ = 1,
  SC_LOGIN_RES = 2,
  CS_CHARACTER_CREATE_REQ = 3,
};

public struct CS_LOGIN_REQ : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static CS_LOGIN_REQ GetRootAsCS_LOGIN_REQ(ByteBuffer _bb) { return GetRootAsCS_LOGIN_REQ(_bb, new CS_LOGIN_REQ()); }
  public static CS_LOGIN_REQ GetRootAsCS_LOGIN_REQ(ByteBuffer _bb, CS_LOGIN_REQ obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CS_LOGIN_REQ __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long Uid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long Token { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }

  public static Offset<Login.CS_LOGIN_REQ> CreateCS_LOGIN_REQ(FlatBufferBuilder builder,
      long uid = 0,
      long token = 0) {
    builder.StartTable(2);
    CS_LOGIN_REQ.AddToken(builder, token);
    CS_LOGIN_REQ.AddUid(builder, uid);
    return CS_LOGIN_REQ.EndCS_LOGIN_REQ(builder);
  }

  public static void StartCS_LOGIN_REQ(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddUid(FlatBufferBuilder builder, long uid) { builder.AddLong(0, uid, 0); }
  public static void AddToken(FlatBufferBuilder builder, long token) { builder.AddLong(1, token, 0); }
  public static Offset<Login.CS_LOGIN_REQ> EndCS_LOGIN_REQ(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Login.CS_LOGIN_REQ>(o);
  }
};

public struct SC_LOGIN_RES : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static SC_LOGIN_RES GetRootAsSC_LOGIN_RES(ByteBuffer _bb) { return GetRootAsSC_LOGIN_RES(_bb, new SC_LOGIN_RES()); }
  public static SC_LOGIN_RES GetRootAsSC_LOGIN_RES(ByteBuffer _bb, SC_LOGIN_RES obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SC_LOGIN_RES __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public bool Result { get { int o = __p.__offset(4); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<Login.SC_LOGIN_RES> CreateSC_LOGIN_RES(FlatBufferBuilder builder,
      bool result = false) {
    builder.StartTable(1);
    SC_LOGIN_RES.AddResult(builder, result);
    return SC_LOGIN_RES.EndSC_LOGIN_RES(builder);
  }

  public static void StartSC_LOGIN_RES(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddResult(FlatBufferBuilder builder, bool result) { builder.AddBool(0, result, false); }
  public static Offset<Login.SC_LOGIN_RES> EndSC_LOGIN_RES(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Login.SC_LOGIN_RES>(o);
  }
};

public struct CS_CHARACTER_CREATE_REQ : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static CS_CHARACTER_CREATE_REQ GetRootAsCS_CHARACTER_CREATE_REQ(ByteBuffer _bb) { return GetRootAsCS_CHARACTER_CREATE_REQ(_bb, new CS_CHARACTER_CREATE_REQ()); }
  public static CS_CHARACTER_CREATE_REQ GetRootAsCS_CHARACTER_CREATE_REQ(ByteBuffer _bb, CS_CHARACTER_CREATE_REQ obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CS_CHARACTER_CREATE_REQ __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Name { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(4); }
  public Define.Job Job { get { int o = __p.__offset(6); return o != 0 ? (Define.Job)__p.bb.GetSbyte(o + __p.bb_pos) : Define.Job.Warrior; } }

  public static Offset<Login.CS_CHARACTER_CREATE_REQ> CreateCS_CHARACTER_CREATE_REQ(FlatBufferBuilder builder,
      StringOffset nameOffset = default(StringOffset),
      Define.Job job = Define.Job.Warrior) {
    builder.StartTable(2);
    CS_CHARACTER_CREATE_REQ.AddName(builder, nameOffset);
    CS_CHARACTER_CREATE_REQ.AddJob(builder, job);
    return CS_CHARACTER_CREATE_REQ.EndCS_CHARACTER_CREATE_REQ(builder);
  }

  public static void StartCS_CHARACTER_CREATE_REQ(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(0, nameOffset.Value, 0); }
  public static void AddJob(FlatBufferBuilder builder, Define.Job job) { builder.AddSbyte(1, (sbyte)job, 0); }
  public static Offset<Login.CS_CHARACTER_CREATE_REQ> EndCS_CHARACTER_CREATE_REQ(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Login.CS_CHARACTER_CREATE_REQ>(o);
  }
};

public struct Root : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static Root GetRootAsRoot(ByteBuffer _bb) { return GetRootAsRoot(_bb, new Root()); }
  public static Root GetRootAsRoot(ByteBuffer _bb, Root obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Root __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Login.Packet PacketType { get { int o = __p.__offset(4); return o != 0 ? (Login.Packet)__p.bb.Get(o + __p.bb_pos) : Login.Packet.NONE; } }
  public TTable? Packet<TTable>() where TTable : struct, IFlatbufferObject { int o = __p.__offset(6); return o != 0 ? (TTable?)__p.__union<TTable>(o + __p.bb_pos) : null; }
  public Login.CS_LOGIN_REQ PacketAsCS_LOGIN_REQ() { return Packet<Login.CS_LOGIN_REQ>().Value; }
  public Login.SC_LOGIN_RES PacketAsSC_LOGIN_RES() { return Packet<Login.SC_LOGIN_RES>().Value; }
  public Login.CS_CHARACTER_CREATE_REQ PacketAsCS_CHARACTER_CREATE_REQ() { return Packet<Login.CS_CHARACTER_CREATE_REQ>().Value; }

  public static Offset<Login.Root> CreateRoot(FlatBufferBuilder builder,
      Login.Packet packet_type = Login.Packet.NONE,
      int packetOffset = 0) {
    builder.StartTable(2);
    Root.AddPacket(builder, packetOffset);
    Root.AddPacketType(builder, packet_type);
    return Root.EndRoot(builder);
  }

  public static void StartRoot(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddPacketType(FlatBufferBuilder builder, Login.Packet packetType) { builder.AddByte(0, (byte)packetType, 0); }
  public static void AddPacket(FlatBufferBuilder builder, int packetOffset) { builder.AddOffset(1, packetOffset, 0); }
  public static Offset<Login.Root> EndRoot(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Login.Root>(o);
  }
  public static void FinishRootBuffer(FlatBufferBuilder builder, Offset<Login.Root> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedRootBuffer(FlatBufferBuilder builder, Offset<Login.Root> offset) { builder.FinishSizePrefixed(offset.Value); }
};


}
