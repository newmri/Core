include "../common/define_protocol.fbs";
include "../common/info_protocol.fbs";

namespace GamePacket;

enum ErrorCode : byte
{
  SUCCESS = 0,
  UNKNOWN,
  ALREADY_LOGINED
}

union Packet
{
    CS_LOGIN_REQ,
    SC_LOGIN_RES,
    SC_PING_REQ,
    CS_PING_RES,
    CS_LOGOUT_NOTI,
    SC_SPAWN_PLAYER_NOTI,
    SC_DESPAWN_OBJECT_NOTI,
    CS_MOVE_REQ,
    SC_MOVE_RES,
    CS_SET_STATE_REQ,
    SC_SET_STATE_RES,
    CS_USE_SKILL_REQ,
    SC_USE_SKILL_RES,
    SC_GET_DAMAGE_NOTI,
    CS_REVIVE_REQ,
    SC_REVIVE_RES
}

table CS_LOGIN_REQ
{
    uid:int64;
    character_uid:int64;
    token:int32;
}

table CharacterInfo (native_type:"CharacterInfoT")
{
    name:string;
    job:Define.Job;
    gear:Info.CharacterGear (native_inline);
}

table MyCharacterInfo (native_type:"MyCharacterInfoT")
{
    name:string;
    job:Define.Job;
    gear:Info.CharacterGear (native_inline);
    bonus_stat:int32;
}

union CharacterInfoBase
{
    CharacterInfo,
    MyCharacterInfo
}

table SC_LOGIN_RES
{
    result:ErrorCode;
    object_info:Info.ObjectInfo;
    creature_info:Info.CreatureInfo;
    character_info:MyCharacterInfo;
    money:Info.MoneyWrapper;
}

table SC_PING_REQ
{
}

table CS_PING_RES
{
}

table CS_LOGOUT_NOTI
{
}

table SC_SPAWN_PLAYER_NOTI
{
    object_info:Info.ObjectInfo;
    creature_info:Info.CreatureInfo;
    character_info:CharacterInfo;
}

table SC_DESPAWN_OBJECT_NOTI
{
     object_type:Define.ObjectType;
     uid:int64;
}

table CS_MOVE_REQ
{
    pos_info:Info.PositionInfo (native_inline);
}

table SC_MOVE_RES
{
    object_info:Info.ObjectInfo (native_inline);
}

table CS_SET_STATE_REQ
{
    state:Define.ObjectState;
}

table SC_SET_STATE_RES
{
    object_type:Define.ObjectType;
    object_id:int64;
    state:Define.ObjectState;
}

table CS_USE_SKILL_REQ
{
    skill_id:int32;
}

table SC_USE_SKILL_RES
{
    object_type:Define.ObjectType;
    object_id:int64;
    skill_id:int32;
}

table DamageInfo
{
    object_type:Define.ObjectType;
    oid:int64;
    damage:int32;
    is_critical:bool;
}

table SC_GET_DAMAGE_NOTI
{
   damage_info:[DamageInfo];
}

table CS_REVIVE_REQ
{
}

table SC_REVIVE_RES
{
   object_info:Info.ObjectInfo (native_inline);
}

table Root
{
    packet:Packet;
}

root_type Root;
